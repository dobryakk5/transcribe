from pyzbar.pyzbar import decode
from PIL import Image
from urllib.parse import parse_qs, urlparse
import sys

def parse_qr_data(data):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏ QR-–∫–æ–¥–∞.
    """
    parsed_url = urlparse(data)
    params = parse_qs(parsed_url.query)
    return {k: v[0] for k, v in params.items()}

def main(image_path):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è QR-–∫–æ–¥–∞ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.
    """
    try:
        img = Image.open(image_path)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return

    decoded_objects = decode(img)
    if not decoded_objects:
        print("‚ùå QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    for obj in decoded_objects:
        qr_data = obj.data.decode('utf-8')
        print(f"üì¶ –î–∞–Ω–Ω—ã–µ QR-–∫–æ–¥–∞: {qr_data}")
        receipt_info = parse_qr_data(qr_data)
        print("\nüìÑ –ò–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
        for key, value in receipt_info.items():
            print(f"{key.upper()}: {value}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python qr.py –ø—É—Ç—å_–∫_–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é")
    else:
        main(sys.argv[1])
